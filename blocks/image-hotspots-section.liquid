{% comment %}
  @prompt
    Create an interactive image hotspot component with pulsating circular markers that show tooltips on hover. Features minimal aesthetic with pulsating ring animations and smooth hover effects.
{% endcomment %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-image-hotspot-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 100%;
    display: block;
  }

  .ai-image-hotspot-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: auto;
    display: block;
  }

  .ai-image-hotspot-image-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    display: block;
  }

  .ai-image-hotspot-placeholder-{{ ai_gen_id }} {
    background-color: #f4f4f4;
    width: 100%;
    min-height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-image-hotspot-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 500px;
    max-height: 400px;
  }

  .ai-hotspot-point-{{ ai_gen_id }} {
    position: absolute;
    top: var(--hotspot-y);
    left: var(--hotspot-x);
    transform: translate(-50%, -50%);
    z-index: 10;
  }

  /* Pulsating Ring Animation */
  @keyframes ai-hotspot-pulsate-{{ ai_gen_id }} {
    0% {
      transform: scale(1);
      opacity: {{ block.settings.ring_opacity | divided_by: 100.0 }};
    }
    45% {
      transform: scale(1.75);
      opacity: 0;
    }
    100% {
      transform: scale(1.75);
      opacity: 0;
    }
  }

  @keyframes ai-hotspot-stop-pulsate-{{ ai_gen_id }} {
    from {
      opacity: 0.4;
    }
    to {
      transform: scale(2);
      opacity: 0;
    }
  }

  .ai-hotspot-marker-{{ ai_gen_id }} {
    position: relative;
    cursor: pointer;
  }

  .ai-hotspot-ring-{{ ai_gen_id }} {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: calc({{ block.settings.hotspot_size }}px * 2);
    height: calc({{ block.settings.hotspot_size }}px * 2);
    margin: calc(-{{ block.settings.hotspot_size }}px) 0 0 calc(-{{ block.settings.hotspot_size }}px);
    transform-origin: 50% 50%;
    border-radius: 50%;
    border: 1px solid {{ block.settings.ring_color }};
    opacity: 0;
    animation: ai-hotspot-pulsate-{{ ai_gen_id }} 3s ease-out infinite;
  }

  .ai-hotspot-circle-{{ ai_gen_id }} {
    position: absolute;
    left: 50%;
    top: 50%;
    width: {{ block.settings.hotspot_size }}px;
    height: {{ block.settings.hotspot_size }}px;
    margin: calc(-{{ block.settings.hotspot_size | divided_by: 2 }}px) 0 0 calc(-{{ block.settings.hotspot_size | divided_by: 2 }}px);
    background-color: rgba(255, 255, 255, 0.9);
    border: 2px solid rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(10px);
    opacity: 0.6;
    transform-origin: 50% 50%;
  }

  .ai-hotspot-marker-{{ ai_gen_id }}:hover .ai-hotspot-circle-{{ ai_gen_id }} {
    opacity: 0.8;
    transform: scale(1.1);
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.25);
  }

  .ai-hotspot-marker-{{ ai_gen_id }}:hover .ai-hotspot-ring-{{ ai_gen_id }} {
    animation: none;
  }

  .ai-hotspot-marker-{{ ai_gen_id }}:active .ai-hotspot-circle-{{ ai_gen_id }} {
    transform: scale(0.875);
  }

  .ai-hotspot-marker-{{ ai_gen_id }}:active .ai-hotspot-ring-{{ ai_gen_id }} {
    animation: ai-hotspot-stop-pulsate-{{ ai_gen_id }} 0.3s;
  }

  .ai-hotspot-center-dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.6);
    transition: all 0.3s ease;
  }

  .ai-hotspot-marker-{{ ai_gen_id }}:hover .ai-hotspot-center-dot-{{ ai_gen_id }} {
    width: calc({{ block.settings.hotspot_size }}px - 12px);
    height: calc({{ block.settings.hotspot_size }}px - 12px);
    background-color: transparent;
    border: 2px solid rgba(0, 0, 0, 0.4);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }} {
    position: absolute;
    background-color: {{ block.settings.tooltip_bg_color }};
    color: {{ block.settings.tooltip_text_color }};
    padding: {{ block.settings.tooltip_padding }}px;
    border-radius: {{ block.settings.tooltip_border_radius }}px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
    max-width: {{ block.settings.tooltip_max_width }}px;
    min-width: 200px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: all 0.3s ease;
    z-index: 20;
    pointer-events: none;
    backdrop-filter: blur(10px);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    pointer-events: auto;
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--top {
    bottom: calc(100% + 15px);
    left: 50%;
    transform: translateX(-50%) translateY(10px);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--top.active {
    transform: translateX(-50%) translateY(0);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--bottom {
    top: calc(100% + 15px);
    left: 50%;
    transform: translateX(-50%) translateY(-10px);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--bottom.active {
    transform: translateX(-50%) translateY(0);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--left {
    right: calc(100% + 15px);
    top: 50%;
    transform: translateY(-50%) translateX(10px);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--left.active {
    transform: translateY(-50%) translateX(0);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--right {
    left: calc(100% + 15px);
    top: 50%;
    transform: translateY(-50%) translateX(-10px);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--right.active {
    transform: translateY(-50%) translateX(0);
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}::before {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--top::before {
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    border-width: 8px 8px 0 8px;
    border-color: {{ block.settings.tooltip_bg_color }} transparent transparent transparent;
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--bottom::before {
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    border-width: 0 8px 8px 8px;
    border-color: transparent transparent {{ block.settings.tooltip_bg_color }} transparent;
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--left::before {
    left: 100%;
    top: 50%;
    transform: translateY(-50%);
    border-width: 8px 0 8px 8px;
    border-color: transparent transparent transparent {{ block.settings.tooltip_bg_color }};
  }

  .ai-hotspot-tooltip-{{ ai_gen_id }}--right::before {
    right: 100%;
    top: 50%;
    transform: translateY(-50%);
    border-width: 8px 8px 8px 0;
    border-color: transparent {{ block.settings.tooltip_bg_color }} transparent transparent;
  }

  .ai-hotspot-tooltip-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.tooltip_title_size }}px;
    font-weight: 600;
    margin: 0 0 8px 0;
    line-height: 1.3;
  }

  .ai-hotspot-tooltip-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.tooltip_text_size }}px;
    line-height: 1.4;
    margin: 0;
  }

  @media screen and (max-width: 749px) {
    .ai-hotspot-ring-{{ ai_gen_id }} {
      width: calc({{ block.settings.hotspot_size | times: 0.8 }}px * 2);
      height: calc({{ block.settings.hotspot_size | times: 0.8 }}px * 2);
      margin: calc(-{{ block.settings.hotspot_size | times: 0.8 }}px) 0 0 calc(-{{ block.settings.hotspot_size | times: 0.8 }}px);
    }

    .ai-hotspot-circle-{{ ai_gen_id }} {
      width: {{ block.settings.hotspot_size | times: 0.8 }}px;
      height: {{ block.settings.hotspot_size | times: 0.8 }}px;
      margin: calc(-{{ block.settings.hotspot_size | times: 0.8 | divided_by: 2 }}px) 0 0 calc(-{{ block.settings.hotspot_size | times: 0.8 | divided_by: 2 }}px);
    }

    .ai-hotspot-marker-{{ ai_gen_id }}:hover .ai-hotspot-center-dot-{{ ai_gen_id }} {
      width: calc({{ block.settings.hotspot_size | times: 0.8 }}px - 12px);
      height: calc({{ block.settings.hotspot_size | times: 0.8 }}px - 12px);
    }

    .ai-hotspot-tooltip-{{ ai_gen_id }} {
      max-width: {{ block.settings.tooltip_max_width | times: 0.8 }}px;
      min-width: 160px;
    }
  }
{% endstyle %}

<image-hotspots-{{ ai_gen_id }}
  class="ai-image-hotspot-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-image-hotspot-image-wrapper-{{ ai_gen_id }}">
    {% if block.settings.image %}
      <img
        src="{{ block.settings.image | image_url: width: 2000 }}"
        alt="{{ block.settings.image.alt | escape }}"
        loading="lazy"
        width="{{ block.settings.image.width }}"
        height="{{ block.settings.image.height }}"
        class="ai-image-hotspot-image-{{ ai_gen_id }}"
      >
    {% else %}
      <div class="ai-image-hotspot-placeholder-{{ ai_gen_id }}">
        {{ 'image' | placeholder_svg_tag }}
      </div>
    {% endif %}

    {% for i in (1..5) %}
      {% liquid
        assign hotspot_enabled_key = 'hotspot_' | append: i | append: '_enabled'
        assign hotspot_x_key = 'hotspot_' | append: i | append: '_x'
        assign hotspot_y_key = 'hotspot_' | append: i | append: '_y'
        assign hotspot_title_key = 'hotspot_' | append: i | append: '_title'
        assign hotspot_description_key = 'hotspot_' | append: i | append: '_description'

        assign hotspot_enabled = block.settings[hotspot_enabled_key]
        assign hotspot_x = block.settings[hotspot_x_key]
        assign hotspot_y = block.settings[hotspot_y_key]
        assign hotspot_title = block.settings[hotspot_title_key]
        assign hotspot_description = block.settings[hotspot_description_key]
      %}

      {% if hotspot_enabled %}
        <div
          class="ai-hotspot-point-{{ ai_gen_id }}"
          style="--hotspot-x: {{ hotspot_x }}%; --hotspot-y: {{ hotspot_y }}%;"
          data-hotspot-id="{{ i }}"
        >
          <div class="ai-hotspot-marker-{{ ai_gen_id }}">
            <span class="ai-hotspot-ring-{{ ai_gen_id }}"></span>
            <span class="ai-hotspot-circle-{{ ai_gen_id }}">
              <div class="ai-hotspot-center-dot-{{ ai_gen_id }}"></div>
            </span>
          </div>

          <div
            class="ai-hotspot-tooltip-{{ ai_gen_id }} ai-hotspot-tooltip-{{ ai_gen_id }}--{{ block.settings.tooltip_position }}"
            role="tooltip"
            aria-hidden="true"
          >
            {% if hotspot_title != blank %}
              <h3 class="ai-hotspot-tooltip-title-{{ ai_gen_id }}">{{ hotspot_title }}</h3>
            {% endif %}
            {% if hotspot_description != blank %}
              <div class="ai-hotspot-tooltip-description-{{ ai_gen_id }}">{{ hotspot_description }}</div>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</image-hotspots-{{ ai_gen_id }}>

<script>
  (function() {
    class ImageHotspots{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.hoverTimeout = null;
        this.activeTooltip = null;
      }

      connectedCallback() {
        this.hotspots = this.querySelectorAll('.ai-hotspot-point-{{ ai_gen_id }}');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.hotspots.forEach((hotspot) => {
          const marker = hotspot.querySelector('.ai-hotspot-marker-{{ ai_gen_id }}');
          const tooltip = hotspot.querySelector('.ai-hotspot-tooltip-{{ ai_gen_id }}');

          marker.addEventListener('mouseenter', () => {
            this.hoverTimeout = setTimeout(() => {
              this.hideAllTooltips();
              this.showTooltip(hotspot, tooltip);
            }, 200);
          });

          marker.addEventListener('mouseleave', () => {
            if (this.hoverTimeout) {
              clearTimeout(this.hoverTimeout);
              this.hoverTimeout = null;
            }
            this.hideTooltip(tooltip);
          });

          // Keep tooltip visible when hovering over it
          tooltip.addEventListener('mouseenter', () => {
            if (this.hoverTimeout) {
              clearTimeout(this.hoverTimeout);
              this.hoverTimeout = null;
            }
          });

          tooltip.addEventListener('mouseleave', () => {
            this.hideTooltip(tooltip);
          });
        });
      }

      showTooltip(hotspot, tooltip) {
        this.adjustTooltipPosition(hotspot, tooltip);
        tooltip.classList.add('active');
        tooltip.setAttribute('aria-hidden', 'false');
        this.activeTooltip = tooltip;
      }

      hideTooltip(tooltip) {
        tooltip.classList.remove('active');
        tooltip.setAttribute('aria-hidden', 'true');
        if (this.activeTooltip === tooltip) {
          this.activeTooltip = null;
        }
      }

      hideAllTooltips() {
        this.hotspots.forEach((hotspot) => {
          const tooltip = hotspot.querySelector('.ai-hotspot-tooltip-{{ ai_gen_id }}');
          this.hideTooltip(tooltip);
        });
      }

      adjustTooltipPosition(hotspot, tooltip) {
        const rect = this.getBoundingClientRect();
        const hotspotRect = hotspot.getBoundingClientRect();
        
        const spaceTop = hotspotRect.top - rect.top;
        const spaceBottom = rect.bottom - hotspotRect.bottom;
        const spaceLeft = hotspotRect.left - rect.left;
        const spaceRight = rect.right - hotspotRect.right;
        
        tooltip.className = tooltip.className.replace(/ai-hotspot-tooltip-{{ ai_gen_id }}--\w+/g, '');
        
        if (spaceTop > 150 && spaceTop > spaceBottom) {
          tooltip.classList.add('ai-hotspot-tooltip-{{ ai_gen_id }}--top');
        } else if (spaceBottom > 150) {
          tooltip.classList.add('ai-hotspot-tooltip-{{ ai_gen_id }}--bottom');
        } else if (spaceLeft > 250) {
          tooltip.classList.add('ai-hotspot-tooltip-{{ ai_gen_id }}--left');
        } else if (spaceRight > 250) {
          tooltip.classList.add('ai-hotspot-tooltip-{{ ai_gen_id }}--right');
        } else {
          tooltip.classList.add('ai-hotspot-tooltip-{{ ai_gen_id }}--bottom');
        }
      }
    }

    customElements.define('image-hotspots-{{ ai_gen_id }}', ImageHotspots{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image Hotspots",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Image"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "header",
      "content": "Hotspot Style"
    },
    {
      "type": "range",
      "id": "hotspot_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Hotspot size",
      "default": 32
    },
    {
      "type": "color",
      "id": "ring_color",
      "label": "Pulsating ring color",
      "default": "#ed0048"
    },
    {
      "type": "range",
      "id": "ring_opacity",
      "min": 10,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Ring opacity",
      "default": 80
    },
    {
      "type": "header",
      "content": "Tooltip Style"
    },
    {
      "type": "select",
      "id": "tooltip_position",
      "label": "Default tooltip position",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "top"
    },
    {
      "type": "range",
      "id": "tooltip_max_width",
      "min": 200,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Tooltip max width",
      "default": 280
    },
    {
      "type": "range",
      "id": "tooltip_padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Tooltip padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "tooltip_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Tooltip border radius",
      "default": 8
    },
    {
      "type": "color",
      "id": "tooltip_bg_color",
      "label": "Tooltip background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "tooltip_text_color",
      "label": "Tooltip text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "tooltip_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Tooltip title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "tooltip_text_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Tooltip text size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Hotspot 1"
    },
    {
      "type": "checkbox",
      "id": "hotspot_1_enabled",
      "label": "Enable hotspot 1",
      "default": true
    },
    {
      "type": "range",
      "id": "hotspot_1_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 25
    },
    {
      "type": "range",
      "id": "hotspot_1_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 25
    },
    {
      "type": "text",
      "id": "hotspot_1_title",
      "label": "Title",
      "default": "Hotspot 1"
    },
    {
      "type": "textarea",
      "id": "hotspot_1_description",
      "label": "Description",
      "default": "This is the description for hotspot 1. Add any details you want to share about this point of interest."
    },
    {
      "type": "header",
      "content": "Hotspot 2"
    },
    {
      "type": "checkbox",
      "id": "hotspot_2_enabled",
      "label": "Enable hotspot 2",
      "default": true
    },
    {
      "type": "range",
      "id": "hotspot_2_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 50
    },
    {
      "type": "range",
      "id": "hotspot_2_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 50
    },
    {
      "type": "text",
      "id": "hotspot_2_title",
      "label": "Title",
      "default": "Hotspot 2"
    },
    {
      "type": "textarea",
      "id": "hotspot_2_description",
      "label": "Description",
      "default": "This is the description for hotspot 2. Add any details you want to share about this point of interest."
    },
    {
      "type": "header",
      "content": "Hotspot 3"
    },
    {
      "type": "checkbox",
      "id": "hotspot_3_enabled",
      "label": "Enable hotspot 3",
      "default": true
    },
    {
      "type": "range",
      "id": "hotspot_3_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 75
    },
    {
      "type": "range",
      "id": "hotspot_3_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 75
    },
    {
      "type": "text",
      "id": "hotspot_3_title",
      "label": "Title",
      "default": "Hotspot 3"
    },
    {
      "type": "textarea",
      "id": "hotspot_3_description",
      "label": "Description",
      "default": "This is the description for hotspot 3. Add any details you want to share about this point of interest."
    },
    {
      "type": "header",
      "content": "Hotspot 4"
    },
    {
      "type": "checkbox",
      "id": "hotspot_4_enabled",
      "label": "Enable hotspot 4"
    },
    {
      "type": "range",
      "id": "hotspot_4_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 30
    },
    {
      "type": "range",
      "id": "hotspot_4_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 70
    },
    {
      "type": "text",
      "id": "hotspot_4_title",
      "label": "Title",
      "default": "Hotspot 4"
    },
    {
      "type": "textarea",
      "id": "hotspot_4_description",
      "label": "Description",
      "default": "This is the description for hotspot 4. Add any details you want to share about this point of interest."
    },
    {
      "type": "header",
      "content": "Hotspot 5"
    },
    {
      "type": "checkbox",
      "id": "hotspot_5_enabled",
      "label": "Enable hotspot 5"
    },
    {
      "type": "range",
      "id": "hotspot_5_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 80
    },
    {
      "type": "range",
      "id": "hotspot_5_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 30
    },
    {
      "type": "text",
      "id": "hotspot_5_title",
      "label": "Title",
      "default": "Hotspot 5"
    },
    {
      "type": "textarea",
      "id": "hotspot_5_description",
      "label": "Description",
      "default": "This is the description for hotspot 5. Add any details you want to share about this point of interest."
    }
  ],
  "presets": [
    {
      "name": "Image Hotspots"
    }
  ]
}
{% endschema %}