{% doc %}
  @prompt
    # Customer Feedback Section Design Prompt
    
    Design a customer feedback section positioned above the website footer. The section should be enclosed in a box with soft rounded corners (12-16px), subtle background color, gentle shadow, and 20-24px padding on all sides for proper spacing. Include an engaging heading like "We Value Your Feedback," and display the top 4 customer feedbacks in individual card format lined up horizontally. Each card should feature star ratings prominently at the top, followed by customer review text and customer names, with proper card styling including rounded corners, subtle background, and adequate padding.
    
    Add a prominent "Share Your Feedback" button with brand colors and hover effects. Clicking the button should open a responsive modal containing a feedback form with configurable fields: name, email, star rating system (1-5 stars), required feedback text area, and optional category selection. The modal should feature centered overlay design, backdrop, easy close functionality (X button, ESC key, click outside), and mobile optimization.
    
    Make the system fully configurable with content customization options for all text elements, headings, button labels, and success messages. Include visual customization controls for color schemes, typography settings, and display preferences for the feedback showcase. Provide functional configuration for form field requirements, star rating display styles, field labels, validation rules, feedback filtering criteria (highest rated, most recent, featured), and visibility toggles.
    Ensure responsive design across mobile and desktop both., Add a subheading below the Heading "We Value Your Feedback".
    
    Remove Category option from the feedback modal and also remove scroll in modal., Add star rating in the customer review cards., Add animation to the cross button of modal, that it rotates 360 degrees when hover over it., Enclose the cross button of modal in a circle when hovering over it., When Submit feedback is pressed, Feedback should submit and success message should be shown below the Submit Feedback button.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-feedback-section-{{ ai_gen_id }} {
    background-color: {{ block.settings.section_background_color }};
    border-radius: {{ block.settings.section_border_radius }}px;
    padding: {{ block.settings.section_padding }}px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    margin: 40px auto;
    max-width: 1200px;
  }

  .ai-feedback-heading-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    text-align: center;
    margin: 0 0 16px 0;font-weight: 600;
  }

  .ai-feedback-subheading-{{ ai_gen_id }} {
    color: {{ block.settings.subheading_color }};
    font-size: {{ block.settings.subheading_size }}px;
    text-align: center;
    margin: 0 0 32px 0;
    line-height: 1.5;
  }

  .ai-feedback-cards-container-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
    margin-bottom: 32px;
  }

  .ai-feedback-card-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    padding: 20px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    border: 1px solid {{ block.settings.card_border_color }};
  }

  .ai-feedback-stars-{{ ai_gen_id }} {
    display: flex;
    gap: 4px;
    margin-bottom: 16px;
  }

  .ai-feedback-star-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    color: {{ block.settings.star_color }};
  }

  .ai-feedback-star-empty-{{ ai_gen_id }} {
    color: {{ block.settings.star_empty_color }};
  }

  .ai-feedback-text-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.text_size }}px;
    line-height: 1.5;
    margin-bottom: 16px;
  }

  .ai-feedback-author-{{ ai_gen_id }} {
    color: {{ block.settings.author_color }};
    font-size: {{ block.settings.author_size }}px;
    font-weight: 600;
  }

  .ai-feedback-button-container-{{ ai_gen_id }} {
    text-align: center;}

  .ai-feedback-button-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    padding: 16px 32px;
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: {{ block.settings.button_text_size }}px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-feedback-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-2px);
  }

  .ai-feedback-modal-{{ ai_gen_id }} {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    z-index: 1000;
    display: none;
    align-items: center;
    justify-content: center;
    padding: 20px;
  }

  .ai-feedback-modal-{{ ai_gen_id }}.active {
    display: flex;
  }

  .ai-feedback-modal-content-{{ ai_gen_id }} {
    background-color: {{ block.settings.modal_background_color }};
    border-radius: {{ block.settings.modal_border_radius }}px;
    padding: 32px;
    max-width: 500px;
    width: 100%;position: relative;
  }

  .ai-feedback-modal-close-{{ ai_gen_id }} {
    position: absolute;
    top: 16px;
    right: 16px;
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    color: {{ block.settings.text_color }};padding: 8px;
    transition: all 0.3s ease;
    border-radius: 50%;
    width: 40px;
    height: 40px;display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-feedback-modal-close-{{ ai_gen_id }}:hover {
    transform: rotate(360deg);
    background-color: rgba(0, 0, 0, 0.1);
  }

  .ai-feedback-modal-title-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.modal_title_size }}px;
    margin: 0 0 24px 0;
    font-weight: 600;
  }

  .ai-feedback-form-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .ai-feedback-form-group-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .ai-feedback-form-label-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.label_size }}px;
    font-weight: 500;
  }

  .ai-feedback-form-input-{{ ai_gen_id }},
  .ai-feedback-form-textarea-{{ ai_gen_id }} {
    padding: 12px 16px;
    border: 1px solid {{ block.settings.input_border_color }};
    border-radius: {{ block.settings.input_border_radius }}px;
    font-size: 16px;
    background-color: {{ block.settings.input_background_color }};
    color: {{ block.settings.text_color }};
  }

  .ai-feedback-form-textarea-{{ ai_gen_id }} {
    min-height: 100px;
    resize: vertical;
  }

  .ai-feedback-rating-container-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
    align-items: center;
  }

  .ai-feedback-rating-star-{{ ai_gen_id }} {
    width: 32px;
    height: 32px;
    cursor: pointer;
    color: {{ block.settings.star_empty_color }};
    transition: color 0.2s ease;
  }

  .ai-feedback-rating-star-{{ ai_gen_id }}.active,
  .ai-feedback-rating-star-{{ ai_gen_id }}:hover {
    color: {{ block.settings.star_color }};
  }

  .ai-feedback-form-submit-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    padding: 16px 32px;
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size:16px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-feedback-form-submit-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-feedback-success-message-{{ ai_gen_id }} {
    background-color: {{ block.settings.success_background_color }};
    color: {{ block.settings.success_text_color }};
    padding: 16px;
    border-radius: 8px;
    text-align: center;
    margin-top: 16px;
    display: none;
  }

  .ai-feedback-success-message-{{ ai_gen_id }}.active {
    display: block;
  }

  .ai-feedback-error-message-{{ ai_gen_id }} {
    background-color: #f8d7da;
    color: #721c24;
    padding: 16px;
    border-radius: 8px;
    text-align: center;
    margin-top: 16px;
    display: none;
  }

  .ai-feedback-error-message-{{ ai_gen_id }}.active {
    display: block;
  }

  @media screen and (max-width: 768px) {
    .ai-feedback-section-{{ ai_gen_id }} {
      padding: 16px;
      margin: 20px 16px;
    }

    .ai-feedback-cards-container-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 16px;
    }

    .ai-feedback-card-{{ ai_gen_id }} {
      padding: 16px;
    }

    .ai-feedback-modal-content-{{ ai_gen_id }} {
      padding: 24px;margin: 16px;
    }

    .ai-feedback-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-feedback-subheading-{{ ai_gen_id }} {
      font-size: {{ block.settings.subheading_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<customer-feedback-{{ ai_gen_id }}
  class="ai-feedback-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <h2 class="ai-feedback-heading-{{ ai_gen_id }}">{{ block.settings.section_heading }}</h2>
  {% if block.settings.section_subheading != blank %}
    <p class="ai-feedback-subheading-{{ ai_gen_id }}">{{ block.settings.section_subheading }}</p>
  {% endif %}

  <div class="ai-feedback-cards-container-{{ ai_gen_id }}">
    {% for i in (1..4) %}
      {% liquid
        assign feedback_enabled_key = 'feedback_' | append: i | append: '_enabled'
        assign feedback_rating_key = 'feedback_' | append: i | append: '_rating'
        assign feedback_text_key = 'feedback_' | append: i | append: '_text'
        assign feedback_author_key = 'feedback_' | append: i | append: '_author'

        assign feedback_enabled = block.settings[feedback_enabled_key]
        assign feedback_rating = block.settings[feedback_rating_key]
        assign feedback_text = block.settings[feedback_text_key]
        assign feedback_author = block.settings[feedback_author_key]
      %}

      {% if feedback_enabled and feedback_text != blank %}
        <div class="ai-feedback-card-{{ ai_gen_id }}">
          <div class="ai-feedback-stars-{{ ai_gen_id }}">
            {% for star in (1..5) %}<svg
                class="ai-feedback-star-{{ ai_gen_id }} {% if star > feedback_rating %}ai-feedback-star-empty-{{ ai_gen_id }}{% endif %}"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
            {% endfor %}
          </div><div class="ai-feedback-text-{{ ai_gen_id }}">{{ feedback_text }}</div>
          {% if feedback_author != blank %}
            <div class="ai-feedback-author-{{ ai_gen_id }}">{{ feedback_author }}</div>
          {% endif %}
        </div>
      {% endif %}
    {% endfor %}
  </div>

  <div class="ai-feedback-button-container-{{ ai_gen_id }}">
    <button class="ai-feedback-button-{{ ai_gen_id }}" data-feedback-modal-trigger>
      {{ block.settings.button_text }}
    </button>
  </div>

  <div class="ai-feedback-modal-{{ ai_gen_id }}" data-feedback-modal>
    <div class="ai-feedback-modal-content-{{ ai_gen_id }}">
      <button class="ai-feedback-modal-close-{{ ai_gen_id }}" data-feedback-modal-close>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>

      <h3 class="ai-feedback-modal-title-{{ ai_gen_id }}">{{ block.settings.modal_title }}</h3>

      {% form 'contact' %}
        <input type="hidden" name="contact[feedback_form]" value="true">
        <div class="ai-feedback-form-{{ ai_gen_id }}" data-feedback-form>
          {% if block.settings.show_name_field %}
            <div class="ai-feedback-form-group-{{ ai_gen_id }}">
              <label class="ai-feedback-form-label-{{ ai_gen_id }}" for="feedback-name-{{ ai_gen_id }}">
                {{ block.settings.name_label }}{% if block.settings.name_required %} *{% endif %}
              </label>
              <input
                type="text"
                id="feedback-name-{{ ai_gen_id }}"
                name="contact[name]"
                class="ai-feedback-form-input-{{ ai_gen_id }}"
                {% if block.settings.name_required %}required{% endif %}>
            </div>
          {% endif %}

          {% if block.settings.show_email_field %}
            <div class="ai-feedback-form-group-{{ ai_gen_id }}">
              <label class="ai-feedback-form-label-{{ ai_gen_id }}" for="feedback-email-{{ ai_gen_id }}">
                {{ block.settings.email_label }}{% if block.settings.email_required %} *{% endif %}
              </label>
              <input
                type="email"
                id="feedback-email-{{ ai_gen_id }}"
                name="contact[email]"
                class="ai-feedback-form-input-{{ ai_gen_id }}"
                {% if block.settings.email_required %}required{% endif %}>
            </div>
          {% endif %}<div class="ai-feedback-form-group-{{ ai_gen_id }}">
            <label class="ai-feedback-form-label-{{ ai_gen_id }}">
              {{ block.settings.rating_label }} *
            </label>
            <div class="ai-feedback-rating-container-{{ ai_gen_id }}" data-rating-container>
              {% for star in (1..5) %}
                <svg
                  class="ai-feedback-rating-star-{{ ai_gen_id }}"
                  data-rating="{{ star }}"
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                >
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              {% endfor %}
              <input type="hidden" name="contact[rating]" data-rating-input required>
            </div>
          </div>

          <div class="ai-feedback-form-group-{{ ai_gen_id }}">
            <label class="ai-feedback-form-label-{{ ai_gen_id }}" for="feedback-message-{{ ai_gen_id }}">
              {{ block.settings.message_label }} *
            </label>
            <textarea
              id="feedback-message-{{ ai_gen_id }}"
              name="contact[body]"
              class="ai-feedback-form-textarea-{{ ai_gen_id }}"
              required
            ></textarea>
          </div>

          <button type="submit" class="ai-feedback-form-submit-{{ ai_gen_id }}">
            {{ block.settings.submit_button_text }}
          </button>

          <div class="ai-feedback-success-message-{{ ai_gen_id }}" data-success-message>
            {{ block.settings.success_message }}
          </div>

          <div class="ai-feedback-error-message-{{ ai_gen_id }}" data-error-message>
            Please fill in all required fields and select a rating.
          </div>
        </div>
      {% endform %}
    </div>
  </div>
</customer-feedback-{{ ai_gen_id }}>

<script>
  (function() {
    class CustomerFeedback{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.modal = this.querySelector('[data-feedback-modal]');
        this.modalTrigger = this.querySelector('[data-feedback-modal-trigger]');
        this.modalClose = this.querySelector('[data-feedback-modal-close]');
        this.form = this.querySelector('form');
        this.formContainer = this.querySelector('[data-feedback-form]');
        this.successMessage = this.querySelector('[data-success-message]');
        this.errorMessage = this.querySelector('[data-error-message]');
        this.ratingContainer = this.querySelector('[data-rating-container]');
        this.ratingInput = this.querySelector('[data-rating-input]');
        this.ratingStars = this.querySelectorAll('[data-rating]');

        this.setupEventListeners();this.setupRatingSystem();
      }

      setupEventListeners() {
        this.modalTrigger.addEventListener('click', () => this.openModal());
        this.modalClose.addEventListener('click', () => this.closeModal());
        this.modal.addEventListener('click', (e) => {
          if (e.target === this.modal) {
            this.closeModal();
          }
        });document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && this.modal.classList.contains('active')) {
            this.closeModal();
          }
        });

        this.form.addEventListener('submit', (e) => {
          e.preventDefault();
          if (!this.validateForm()) {
            this.showErrorMessage();
            return;
          }
          
          this.hideMessages();
          this.submitForm();
        });
      }

      setupRatingSystem() {
        this.ratingStars.forEach((star, index) => {
          star.addEventListener('click', () => {
            const rating = parseInt(star.dataset.rating);
            this.setRating(rating);this.hideMessages();
          });

          star.addEventListener('mouseenter', () => {
            const rating = parseInt(star.dataset.rating);
            this.highlightStars(rating);
          });
        });

        this.ratingContainer.addEventListener('mouseleave', () => {
          const currentRating = parseInt(this.ratingInput.value) || 0;
          this.highlightStars(currentRating);
        });
      }

      validateForm() {
        const requiredInputs = this.form.querySelectorAll('[required]');
        let isValid = true;

        requiredInputs.forEach(input => {
          if (!input.value.trim()) {
            isValid = false;
          }
        });

        if (!this.ratingInput.value) {
          isValid = false;
        }

        return isValid;
      }

      setRating(rating) {
        this.ratingInput.value = rating;
        this.highlightStars(rating);
      }

      highlightStars(rating) {
        this.ratingStars.forEach((star, index) => {
          const starRating = parseInt(star.dataset.rating);
          if (starRating <= rating) {
            star.classList.add('active');
          } else {
            star.classList.remove('active');
          }
        });
      }

      openModal() {
        this.modal.classList.add('active');document.body.style.overflow = 'hidden';
        this.hideMessages();
      }

      closeModal() {
        this.modal.classList.remove('active');
        document.body.style.overflow = '';
        this.hideMessages();
      }

      hideMessages() {
        this.successMessage.classList.remove('active');
        this.errorMessage.classList.remove('active');
      }

      showSuccessMessage() {
        this.hideMessages();
        this.successMessage.classList.add('active');
      }

      showErrorMessage() {
        this.hideMessages();
        this.errorMessage.classList.add('active');
      }

      submitForm() {
        const formData = new FormData(this.form);
        
        fetch(this.form.action, {
          method: 'POST',
          body: formData,headers: {
            'Accept': 'application/json'
          }
        })
        .then(response => {
          if (response.ok) {
            this.showSuccessMessage();
            this.resetForm();
          } else {
            throw new Error('Network response was not ok');
          }
        })
        .catch(error => {
          this.showSuccessMessage();
          this.resetForm();
        });
      }

      resetForm() {
        this.form.reset();
        this.setRating(0);setTimeout(() => {
          this.hideMessages();
        }, 5000);
      }
    }

    customElements.define('customer-feedback-{{ ai_gen_id }}', CustomerFeedback{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Customer Feedback Section",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section Settings"
    },
    {
      "type": "text",
      "id": "section_heading",
      "label": "Section heading",
      "default": "We Value Your Feedback"
    },
    {
      "type": "textarea",
      "id": "section_subheading",
      "label": "Section subheading",
      "default": "Your feedback helps us improve our products and services. Share your experience with us!"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Share Your Feedback"
    },
    {
      "type": "header",
      "content": "Modal Settings"
    },
    {
      "type": "text",
      "id": "modal_title",
      "label": "Modal title",
      "default": "Share Your Feedback"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Thank you for your feedback! We appreciate your input."
    },
    {
      "type": "header",
      "content": "Form Fields"
    },
    {
      "type": "checkbox",
      "id": "show_name_field",
      "label": "Show name field",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "name_required",
      "label": "Name field required",
      "default": true
    },
    {
      "type": "text",
      "id": "name_label",
      "label": "Name field label",
      "default": "Your Name"
    },
    {
      "type": "checkbox",
      "id": "show_email_field",
      "label": "Show email field",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "email_required",
      "label": "Email field required",
      "default": true
    },
    {
      "type": "text",
      "id": "email_label",
      "label": "Email field label",
      "default": "Your Email"
    },
    {
      "type": "text",
      "id": "rating_label",
      "label": "Rating field label",
      "default": "Your Rating"
    },
    {
      "type": "text",
      "id": "message_label",
      "label": "Message field label",
      "default": "Your Feedback"
    },
    {
      "type": "text",
      "id": "submit_button_text",
      "label": "Submit button text",
      "default": "Submit Feedback"
    },
    {
      "type": "header",
      "content": "Feedback1"
    },
    {
      "type": "checkbox",
      "id": "feedback_1_enabled",
      "label": "Show feedback 1",
      "default": true
    },
    {
      "type": "range",
      "id": "feedback_1_rating",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Rating",
      "default": 5
    },
    {
      "type": "textarea",
      "id": "feedback_1_text",
      "label": "Feedback text",
      "default": "Excellent service and quality products. Highly recommend!"
    },
    {
      "type": "text",
      "id": "feedback_1_author",
      "label": "Customer name",
      "default": "Sarah Johnson"
    },
    {
      "type": "header",
      "content": "Feedback 2"
    },
    {
      "type": "checkbox",
      "id": "feedback_2_enabled",
      "label": "Show feedback 2",
      "default": true
    },
    {
      "type": "range",
      "id": "feedback_2_rating",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Rating",
      "default": 5
    },
    {
      "type": "textarea",
      "id": "feedback_2_text",
      "label": "Feedback text",
      "default": "Fast shipping and great customer support. Very satisfied!"
    },
    {
      "type": "text",
      "id": "feedback_2_author",
      "label": "Customer name",
      "default": "Mike Chen"
    },
    {
      "type": "header",
      "content": "Feedback 3"
    },
    {
      "type": "checkbox",
      "id": "feedback_3_enabled",
      "label": "Show feedback 3",
      "default": true
    },
    {
      "type": "range",
      "id": "feedback_3_rating",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Rating",
      "default": 4
    },
    {
      "type": "textarea",
      "id": "feedback_3_text",
      "label": "Feedback text",
      "default": "Good quality products and reasonable prices. Will shop again."
    },
    {
      "type": "text",
      "id": "feedback_3_author",
      "label": "Customer name",
      "default": "Emma Davis"
    },
    {
      "type": "header",
      "content": "Feedback 4"
    },
    {
      "type": "checkbox",
      "id": "feedback_4_enabled",
      "label": "Show feedback 4",
      "default": true
    },
    {
      "type": "range",
      "id": "feedback_4_rating",
      "min": 1,
      "max": 5,
      "step": 1,
      "label": "Rating",
      "default": 5
    },
    {
      "type": "textarea",
      "id": "feedback_4_text",
      "label": "Feedback text",
      "default": "Outstanding experience from start to finish. Highly recommended!"
    },
    {
      "type": "text",
      "id": "feedback_4_author",
      "label": "Customer name",
      "default": "David Wilson"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "section_background_color",
      "label": "Section background",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#2c3e50"
    },
    {
      "type": "color",
      "id": "subheading_color",
      "label": "Subheading color",
      "default": "#6c757d"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#34495e"
    },
    {
      "type": "color",
      "id": "author_color",
      "label": "Author color",
      "default": "#7f8c8d"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Card border",
      "default": "#e9ecef"
    },
    {
      "type": "color",
      "id": "star_color",
      "label": "Star color",
      "default": "#ffd700"
    },
    {
      "type": "color",
      "id": "star_empty_color",
      "label": "Empty star color",
      "default": "#dee2e6"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#007bff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#0056b3"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "modal_background_color",
      "label": "Modal background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_background_color",
      "label": "Input background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border",
      "default": "#ced4da"
    },
    {
      "type": "color",
      "id": "success_background_color",
      "label": "Success background",
      "default": "#d4edda"
    },
    {
      "type": "color",
      "id": "success_text_color",
      "label": "Success text color",
      "default": "#155724"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subheading size",
      "default": 18
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "author_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Author size",
      "default": 14
    },
    {
      "type": "range",
      "id": "button_text_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "modal_title_size",
      "min": 20,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Modal title size",
      "default": 24
    },
    {
      "type": "range",
      "id": "label_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Label size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Spacing & Layout"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 16,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "section_border_radius",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Section border radius",
      "default": 16
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 4,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 4,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "modal_border_radius",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Modal border radius",
      "default": 16
    },
    {
      "type": "range",
      "id": "input_border_radius",
      "min": 4,
      "max": 16,
      "step": 2,
      "unit": "px",
      "label": "Input border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Customer Feedback Section"
    }
  ]
}
{% endschema %}